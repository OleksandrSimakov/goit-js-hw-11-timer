{"version":3,"sources":["index.js"],"names":["refs","clockfaceDays","document","querySelector","clockfaceHours","clockfaceMins","clockfaceSecs","CountdownTimer","onTick","targetDate","Date","intervalId","setInterval","currentDate","now","deltaTime","time","getTimeComponents","clearInterval","console","log","timer","updateClockface","days","pad","Math","floor","hours","mins","secs","value","String","padStart","textContent","start"],"mappings":";;;AAsEC,aAAA,SAAA,EAAA,EAAA,GAAA,KAAA,aAAA,GAAA,MAAA,IAAA,UAAA,qCAAA,SAAA,EAAA,EAAA,GAAA,IAAA,IAAA,EAAA,EAAA,EAAA,EAAA,OAAA,IAAA,CAAA,IAAA,EAAA,EAAA,GAAA,EAAA,WAAA,EAAA,aAAA,EAAA,EAAA,cAAA,EAAA,UAAA,IAAA,EAAA,UAAA,GAAA,OAAA,eAAA,EAAA,EAAA,IAAA,IAAA,SAAA,EAAA,EAAA,EAAA,GAAA,OAAA,GAAA,EAAA,EAAA,UAAA,GAAA,GAAA,EAAA,EAAA,GAAA,EAtED,QAAA,gBAEA,IAAMA,EAAO,CACXC,cAAeC,SAASC,cAAc,2BACtCC,eAAgBF,SAASC,cAAc,4BACvCE,cAAeH,SAASC,cAAc,2BACtCG,cAAeJ,SAASC,cAAc,4BAGlCI,EAAAA,WACoB,SAAA,EAAA,GAAVC,IAAAA,EAAAA,EAAAA,OAAU,EAAA,KAAA,GACjBA,KAAAA,OAASA,EA2DjB,OAAA,EAAA,EAAA,CAAA,CAAA,IAAA,QAxDG,MAAA,WAAQ,IAAA,EAAA,KACFC,EAAa,IAAIC,KAAK,gBACtBC,EAAaC,YAAY,WACvBC,IAAAA,EAAcH,KAAKI,MACnBC,EAAYN,EAAaI,EACzBG,EAAOC,EAAkBF,GAE/B,EAAKP,OAAOQ,GACRD,GAAa,IACfG,cAAcP,GACdQ,QAAQC,IAAI,oBAEb,SA4CN,EA7DKb,GAsCAc,EAAQ,IAAId,EAAe,CAC/BC,OAAQc,IAKV,SAASL,EAAkBD,GAKlB,MAAA,CAACO,KAJKC,EAAIC,KAAKC,MAAMV,EAAQ,QAItBW,MAHAH,EAAIC,KAAKC,MAAOV,EAAQ,MAAyB,OAG1CY,KAFRJ,EAAIC,KAAKC,MAAOV,EAAQ,KAAoB,MAE9Ba,KADdL,EAAIC,KAAKC,MAAOV,EAAQ,IAAc,OAIrD,SAASQ,EAAIM,GACJC,OAAAA,OAAOD,GAAOE,SAAS,EAAE,KAGlC,SAASV,EAA2C,GAA1BC,IAAAA,EAAAA,EAAAA,KAAMI,EAAAA,EAAAA,MAAOC,EAAAA,EAAAA,KAAMC,EAAAA,EAAAA,KAC3C7B,EAAKC,cAAcgC,YAAiBV,GAAAA,OAAAA,GACpCvB,EAAKI,eAAe6B,YAAiBN,GAAAA,OAAAA,GACrC3B,EAAKK,cAAc4B,YAAiBL,GAAAA,OAAAA,GACpC5B,EAAKM,cAAc2B,YAAiBJ,GAAAA,OAAAA,GAlBtCR,EAAMa","file":"src.cb0d65e5.js","sourceRoot":"../src","sourcesContent":["import './styles.css';\n\nconst refs = {\n  clockfaceDays: document.querySelector('span[data-value=\"days\"]'),\n  clockfaceHours: document.querySelector('span[data-value=\"hours\"]'),\n  clockfaceMins: document.querySelector('span[data-value=\"mins\"]'),\n  clockfaceSecs: document.querySelector('span[data-value=\"secs\"]'),\n}\n\nclass CountdownTimer {\n  constructor({ onTick }) {\n    this.onTick = onTick;\n  }\n\n    start() {\n    const targetDate = new Date('May 13, 2022');\n    const intervalId = setInterval(() => {\n      const currentDate = Date.now();\n      const deltaTime = targetDate - currentDate;\n      const time = getTimeComponents(deltaTime);\n      // updateClockface(time);\n      this.onTick(time);\n      if (deltaTime <= 0) {\n        clearInterval(intervalId);\n        console.log('Акция окончена')\n};\n    }, 1000);\n  }\n}\n\n// const timer = {\n//   start() {\n//     const targetDate = new Date('May 13, 2022');\n//     const intervalId = setInterval(() => {\n//       const currentDate = Date.now();\n//       const deltaTime = targetDate - currentDate;\n//       const time = getTimeComponents(deltaTime);\n//       // console.log(`${days}:${hours}:${mins}:${secs}`);\n//       updateClockface(time);\n//       if (deltaTime <= 0) {\n//         clearInterval(intervalId);\n//         console.log('Акция окончена')\n// };\n//     }, 1000);\n//   }\n// }\n\nconst timer = new CountdownTimer({\n  onTick: updateClockface,\n});\n\ntimer.start()\n\nfunction getTimeComponents(time) {\n  const days = pad(Math.floor(time / (1000 * 60 * 60 * 24)));\n  const hours = pad(Math.floor((time % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60)));\n  const mins = pad(Math.floor((time % (1000 * 60 * 60)) / (1000 * 60)));\n  const secs = pad(Math.floor((time % (1000 * 60)) / 1000));\n  return {days, hours, mins, secs}\n}\n\nfunction pad(value) {\n  return String(value).padStart(2,'0')\n}\n\nfunction updateClockface({days, hours, mins, secs}) {\n  refs.clockfaceDays.textContent = `${days}`;\n  refs.clockfaceHours.textContent = `${hours}`;\n  refs.clockfaceMins.textContent = `${mins}`;\n  refs.clockfaceSecs.textContent = `${secs}`;\n}"]}