{"version":3,"sources":["index.js"],"names":["refs","clockfaceDays","document","querySelector","clockfaceHours","clockfaceMins","clockfaceSecs","timer","start","targetDate","Date","intervalId","setInterval","currentDate","now","deltaTime","getTimeComponents","updateClockface","days","hours","mins","secs","clearInterval","console","log","time","pad","Math","floor","value","String","padStart","textContent"],"mappings":";;;AAkDC,aAlDD,QAAA,gBAEA,IAAMA,EAAO,CACXC,cAAeC,SAASC,cAAc,2BACtCC,eAAgBF,SAASC,cAAc,4BACvCE,cAAeH,SAASC,cAAc,2BACtCG,cAAeJ,SAASC,cAAc,4BAGlCI,EAAQ,CACZC,MAAQ,WACAC,IAAAA,EAAa,IAAIC,KAAK,gBACtBC,EAAaC,YAAY,WACvBC,IAAAA,EAAcH,KAAKI,MACnBC,EAAYN,EAAaI,EACGG,EAAAA,EAAkBD,GAEpDE,EAAgB,CAACC,KAFVA,EAAAA,KAEgBC,MAFVA,EAAAA,MAEiBC,KAFVA,EAAAA,KAEgBC,KAFVA,EAAAA,OAGtBN,GAAa,IACfO,cAAcX,GACdY,QAAQC,IAAI,oBAEb,OAWP,SAASR,EAAkBS,GAKlB,MAAA,CAACP,KAJKQ,EAAIC,KAAKC,MAAMH,EAAQ,QAItBN,MAHAO,EAAIC,KAAKC,MAAOH,EAAQ,MAAyB,OAG1CL,KAFRM,EAAIC,KAAKC,MAAOH,EAAQ,KAAoB,MAE9BJ,KADdK,EAAIC,KAAKC,MAAOH,EAAQ,IAAc,OAIrD,SAASC,EAAIG,GACJC,OAAAA,OAAOD,GAAOE,SAAS,EAAE,KAGlC,SAASd,EAA2C,GAA1BC,IAAAA,EAAAA,EAAAA,KAAMC,EAAAA,EAAAA,MAAOC,EAAAA,EAAAA,KAAMC,EAAAA,EAAAA,KAC3CrB,EAAKC,cAAc+B,YAAiBd,GAAAA,OAAAA,GACpClB,EAAKI,eAAe4B,YAAiBb,GAAAA,OAAAA,GACrCnB,EAAKK,cAAc2B,YAAiBZ,GAAAA,OAAAA,GACpCpB,EAAKM,cAAc0B,YAAiBX,GAAAA,OAAAA,GAvBtCd,EAAMC","file":"src.c612e200.js","sourceRoot":"../src","sourcesContent":["import './styles.css';\n\nconst refs = {\n  clockfaceDays: document.querySelector('span[data-value=\"days\"]'),\n  clockfaceHours: document.querySelector('span[data-value=\"hours\"]'),\n  clockfaceMins: document.querySelector('span[data-value=\"mins\"]'),\n  clockfaceSecs: document.querySelector('span[data-value=\"secs\"]'),\n}\n\nconst timer = {\n  start() {\n    const targetDate = new Date('May 13, 2022');\n    const intervalId = setInterval(() => {\n      const currentDate = Date.now();\n      const deltaTime = targetDate - currentDate;\n      const {days, hours, mins, secs} = getTimeComponents(deltaTime);\n      // console.log(`${days}:${hours}:${mins}:${secs}`);\n      updateClockface({days, hours, mins, secs});\n      if (deltaTime <= 0) {\n        clearInterval(intervalId);\n        console.log('Акция окончена')\n};\n    }, 1000);\n  }\n}\n\ntimer.start()\n\n// new CountdownTimer({\n//   selector: '#timer-1',\n//   targetDate = new Date('Jul 17, 2021');\n// });\n\nfunction getTimeComponents(time) {\n  const days = pad(Math.floor(time / (1000 * 60 * 60 * 24)));\n  const hours = pad(Math.floor((time % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60)));\n  const mins = pad(Math.floor((time % (1000 * 60 * 60)) / (1000 * 60)));\n  const secs = pad(Math.floor((time % (1000 * 60)) / 1000));\n  return {days, hours, mins, secs}\n}\n\nfunction pad(value) {\n  return String(value).padStart(2,'0')\n}\n\nfunction updateClockface({days, hours, mins, secs}) {\n  refs.clockfaceDays.textContent = `${days}`;\n  refs.clockfaceHours.textContent = `${hours}`;\n  refs.clockfaceMins.textContent = `${mins}`;\n  refs.clockfaceSecs.textContent = `${secs}`;\n}"]}